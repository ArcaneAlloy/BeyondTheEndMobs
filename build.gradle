plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.11.0'
group = 'fr.shoqapik.btemobs' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'BeyondTheEndMobs'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'bte_mobs'

            mods {
                bte_mobs {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'bte_mobs'

            mods {
                bte_mobs {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'bte_mobs'

            mods {
                bte_mobs {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'bte_mobs', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                bte_mobs {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://jitpack.io'
        credentials {
            username 'AstianBK'
            password 'gamas1311'
        }
    }
    flatDir { dirs 'libs' }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }

}

dependencies {

    minecraft 'net.minecraftforge:forge:1.19.2-43.4.2'

    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))

    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))

    implementation fg.deobf("curse.maven:jei-238222:4494410")
    implementation fg.deobf("com.patataprojects:anvilchanges:0.5.1-1.19.2")
    implementation fg.deobf("mc.duzo:enders_journey:1.0.3")
    implementation fg.deobf("curse.maven:stoneworks-852663:5049592")
    implementation fg.deobf("curse.maven:big-extras-forge-499948:4713352")
    implementation fg.deobf("curse.maven:cataclysmic-combat-880483:5790282")
    implementation fg.deobf("curse.maven:woodworks-543610:4776123")
    implementation fg.deobf("curse.maven:additional-lanterns-501590:5275363")
    implementation fg.deobf("curse.maven:upgrade-aquatic-326895:4777515")
    implementation fg.deobf("curse.maven:experience-obelisk-579484:5733667")
    implementation fg.deobf("curse.maven:occultism-361026:5137571")
    implementation fg.deobf("curse.maven:summoningrituals-671040:4664059")
    implementation fg.deobf("curse.maven:supplementaries-412082:5152602")
    implementation fg.deobf("curse.maven:decorative-blocks-362528:3941638")
    implementation fg.deobf("curse.maven:quark-243121:4812006")
    implementation fg.deobf("curse.maven:extended-slabs-plus-374492:4522949")
    implementation fg.deobf("curse.maven:selene-499980:5567102")
    implementation fg.deobf("curse.maven:blueprint-382216:4749000")
    implementation fg.deobf("curse.maven:smartbrainlib-661293:4458565")
    implementation fg.deobf("curse.maven:curios-309927:5494603")
    implementation fg.deobf("curse.maven:supermartijn642s-core-lib-454372:5668843")
    implementation fg.deobf("curse.maven:puzzles-lib-495476:4600775")
    implementation fg.deobf("curse.maven:autoreglib-250363:4100299")
    implementation fg.deobf("curse.maven:cloth-config-348521:5729096")
    implementation fg.deobf("curse.maven:moving-elevators-373051:5686455")
    implementation fg.deobf("curse.maven:supermartijn642s-config-lib-438332:4715406")
    implementation fg.deobf("curse.maven:moving-elevators-extra-remote-panels-addon-937449:4867548")
    implementation fg.deobf("curse.maven:modonomicon-538392:4675974")
    implementation fg.deobf("curse.maven:kubejs-238086:5408722")
    implementation fg.deobf("curse.maven:rhino-416294:4953345")
    implementation fg.deobf("curse.maven:architectury-api-419699:5137942")
    implementation fg.deobf("curse.maven:endremastered-404183:4046639")
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19:3.1.40')

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

mixin {
    add sourceSets.main, "bte_mobs.refmap.json"

    config "bte_mobs.mixins.json"
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "Beyond The End - Mobs",
                "Specification-Vendor"    : "bte_mobs",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "bte_mobs",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
